@startuml
'https://plantuml.com/sequence-diagram
autonumber
==Создание партнера==
Клиент -> ППРБ.Партнеры: Создание партнера
ППРБ.Партнеры -> СББОЛ: Проверка на миграцию
alt#Gold #lightblue appobj UfsCounterpartiesDictionaryMigratedToPartners = false
СББОЛ --> ППРБ.Партнеры: Клиент не мигрирован в ППРБ
ППРБ.Партнеры -> ППРБ.Партнеры: Создание партнера в таблицах partner, phone, email с partner.uuid = correspondent.replication_guid
ППРБ.Партнеры --> Клиент: Информация о контрагенте
Клиент -> ППРБ.Партнеры: Создание счета
ППРБ.Партнеры -> СББОЛ: Создать контрагента по счету + данные партнера
СББОЛ --> ППРБ.Партнеры: Контрагент создан
ППРБ.Партнеры -> ППРБ.Партнеры: Создание счета
ППРБ.Партнеры --> Клиент: Информация о контрагенте
else #white appobj UfsCounterpartiesDictionaryMigratedToPartners = true
СББОЛ --> ППРБ.Партнеры: Клиент мигрирован в ППРБ
ППРБ.Партнеры -> ППРБ.Партнеры: Создание партнера в таблице partner, email, phone
ППРБ.Партнеры --> Клиент: Информация о партнере
СББОЛ -> ППРБ.Партнеры: Партнер создан
group#Gold #pink negative
СББОЛ --> ППРБ.Партнеры: Ошибка
ППРБ.Партнеры -> ФП.Журналирование: Отправка месседжа в СББОЛ через кафку
ППРБ.Партнеры -> Мониторинг: Оповещение об ошибке
Мониторинг -> BRAIN_TEAM: Разбор ошибки и подготовка исправлений
СББОЛ ->> ФП.Журналирование: Считывание очереди
СББОЛ -> СББОЛ: Создание записи
end
Клиент -> ППРБ.Партнеры: Создание счетов
ППРБ.Партнеры -> ППРБ.Партнеры: Создание счетов для партнера
ППРБ.Партнеры --> Клиент: Информация о счетах
loop#gold = кол-во счетов
ППРБ.Партнеры -> СББОЛ: Создать новых контрагентов
СББОЛ --> ППРБ.Партнеры: Контагент создан
end
end
@enduml
