openapi: "3.0.3"
info:
  title: Request for partners account
  version: 1.0.0
  description: OpenAPI Specification for partners account

servers:
  - url: /

paths:
  /partner/accounts/view:
    post:
      tags:
        - Partner Accounts
      description: Получение счётов Партнера
      operationId: list
      requestBody:
        description: Фильтр для запроса счётов Партнера
        required: false
        content:
          application/json:
            schema:
              $ref: 'model/accounts/partner_accounts_filter.json'
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: 'model/accounts/partner_accounts_response.json'

  /partner/accounts/{id}/{digitalId}:
    get:
      tags:
        - Partner Accounts
      description: Получение счёта по его идентефикатору
      operationId: get-by-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Идентефикатор счёта
        - name: digitalId
          in: path
          required: true
          schema:
            type: string
          description: Идентефикатор личного кабинета
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: 'model/accounts/partner_account_response.json'
    delete:
      tags:
        - Partner Accounts
      description: Удаление счёта Партнера
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Идентефикатор счёта
        - name: digitalId
          in: path
          required: true
          schema:
            type: string
          description: Идентефикатор личного кабинета
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: 'model/accounts/partner_account_response.json'

  /partner/account/:
    post:
      tags:
        - Partner Accounts
      description: Сохранение счёта Партнера
      operationId: save
      requestBody:
        description: Счёт
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/accounts/partner_account.json'
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: 'model/accounts/partner_account_response.json'
    put:
      tags:
        - Partner Accounts
      description: Обновление счёта Партнера
      operationId: update
      requestBody:
        description: Счёт
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/accounts/partner_account.json'
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: 'model/accounts/partner_account_response.json'
  #  /sign:
  #    post:
  #      description: Сохранение подписи контрагента
  #      operationId: sign-save
  #
  #  /sign/check:
  #    post:
  #      description: Проверка подписи контрагента
  #      operationId: sign-check
  #
  #  /sign/delete:
  #    post:
  #      description: Снятие подписи контрагента
  #      operationId: sign-delete
