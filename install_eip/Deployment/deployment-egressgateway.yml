kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: egressgateway-${NAMESPACE}
    app.kubernetes.io/component: gateways
    app.kubernetes.io/instance: ${ISTIO_CONTROL_PLANE}
    app.kubernetes.io/managed-by: maistra-istio-operator
    app.kubernetes.io/name: gateways
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.0.2-7.el8-1
    chart: gateways
    heritage: Tiller
    istio: egressgateway-${NAMESPACE}
    maistra.io/owner: ${ISTIO_CONTROL_PLANE}
    release: istio
  name: egressgateway-${NAMESPACE}
spec:
  progressDeadlineSeconds: 1200
  replicas: ${EGRESS_REPLICAS_COUNT}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: egressgateway-${NAMESPACE}
      istio: egressgateway-${NAMESPACE}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        app: egressgateway-${NAMESPACE}
        chart: gateways
        heritage: Tiller
        istio: egressgateway-${NAMESPACE}
        release: istio
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
              weight: 2
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
              weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      containers:
        - args:
            - proxy
            - router
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --log_output_level=default:info
            - --drainDuration
            - 45s
            - --parentShutdownDuration
            - 1m0s
            - --connectTimeout
            - 10s
            - --serviceCluster
            - egressgateway-${NAMESPACE}
            - --zipkinAddress
            - zipkin.${ISTIO_CONTROL_PLANE}:9411
            - --proxyAdminPort
            - "15000"
            - --statusPort
            - "15020"
            - --controlPlaneAuthPolicy
            - NONE
            - --discoveryAddress
            - istio-pilot.${ISTIO_CONTROL_PLANE}:15010
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: ISTIO_META_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: ISTIO_META_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ISTIO_META_ROUTER_MODE
              value: sni-dnat
          image: ${PROXY_IMAGE}
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
            - containerPort: 15020
              name: status-port
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: ${EGRESS_LIMIT_CPU}
              memory: ${EGRESS_LIMIT_MEMORY}
            requests:
              cpu: ${EGRESS_REQUEST_CPU}
              memory: ${EGRESS_REQUEST_MEMORY}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /etc/certs/
              name: istio-certs
              readOnly: true
            - name: egressgateway-certs
              readOnly: true
              mountPath: /etc/istio/egressgateway-certs
            - name: egressgateway-ca-certs
              readOnly: true
              mountPath: /etc/istio/egressgateway-ca-certs
            - name: ott-uds-socket
              mountPath: /mnt/ott-uds-socket
        - resources:
            limits:
              cpu: 400m
              memory: 500Mi
            requests:
              cpu: 300m
              memory: 300Mi
          terminationMessagePath: /dev/termination-log
          name: ott-sidecar
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
            - name: http-envoy-prom
              containerPort: 15090
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: ott-secret
              readOnly: true
              mountPath: /mnt/secrets
            - name: ott-uds-socket
              mountPath: /mnt/ott-uds-socket
            - name: ott-logback
              readOnly: true
              mountPath: /tmp/ott-logback.xml
          terminationMessagePolicy: File
          envFrom:
            - secretRef:
                name: ott-ingress-passwords
            - configMapRef:
                name: cm-egress-ott-settings
          image: ${OTT_REGISTRY_URL}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      volumes:
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - name: istio-certs
          secret:
            secretName: istio.default
            defaultMode: 400
            optional: true
        - name: egressgateway-certs
          secret:
            secretName: istio-egressgateway-certs
            defaultMode: 400
            optional: true
        - name: egressgateway-ca-certs
          secret:
            secretName: istio-egressgateway-ca-certs
            defaultMode: 400
            optional: true
        - name: ott-secret
          secret:
            secretName: ott-secret
            defaultMode: 400
        - name: ott-uds-socket
          emptyDir:
            medium: Memory
        - name: ott-logback
          configMap:
            name: cm-egress-ott-logback
            defaultMode: 400