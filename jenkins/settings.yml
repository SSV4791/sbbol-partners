docker:
  images:
    java: docker-internal.registry-ci.delta.sbrf.ru/ci02281165/ci03069386/bellsoft/liberica-openjdk-rhel7.7-205:15.0.2-10
    postgres: docker-internal.registry-ci.delta.sbrf.ru/ci02281165/ci03069386/postgres:13-alpine
    docs: docker-internal.registry-ci.delta.sbrf.ru/ci02281165/ci03069386/bellsoft/liberica-openjdk-rhel7.7-205:15.0.2-10

project_name: sbbol-partners

liquibase:
  changelog:
    path: runner/src/main/resources/db/changelog/changelog.yaml
  defaults_file:
    path: jenkins/resources/liquibase/liquibase.properties
  command_type: update

documentation:
  build:
    workdir: ''
    user: CAB-SA-DVO05789
    outputdir: docs/build/docs
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      build -x test

pr_check:
  openshift:
    match:
      files:
        - 'buildSrc/'
        - 'jenkins'
        - 'openshift/'
        - 'jenkins/resources/openshift/'
    workdir: openshift
    url_api: https://api.dev-terra000006-idm.ocp.delta.sbrf.ru:6443
    namespace: ci02281165-sbbol-partners
  vector:
    match:
      files:
        - 'jenkins'
        - 'partners-service/src/main/java/ru/sberbank/pprb/sbbol/partners/entity'
        - 'runner/src/test/java/ru/sberbank/pprb/sbbol/partners/replication/changevector'
    compare:
      release_uri: 'https://nexus-ci.delta.sbrf.ru/repository/maven-distr/CI00908578/CI02792425/D-02.007.00_0017/CI02792425-D-02.007.00_0017-distrib.zip'
    workdir: vectors
    cpu: 2
    memory: '4g'
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      -Dtest.results.enabled=true
      -Dtest-layer=unit
      applyVectorTest --info
  liquibase:
    match:
      files:
        - 'buildSrc/'
        - 'jenkins'
        - 'runner/src/main/resources/db/changelog'
  deploy:
    match:
      files:
        - 'buildSrc/'
        - 'docker/'
        - 'jenkins/'
        - 'openshift/'
      regex:
        - '.*\.kts'
        - '.*\.properties'
    cpu: 2
    memory: '8g'
    jenkins_job: 'OAFSIEKO/SBBOL/EFS/DEV/OpenShift/Deploy/sbbol-ufs/deploy-partners-DEV'
    label: 'prcheck'
    branch: 'release/3.3'
    istio_tag: '2.5'
  build_gradle:
    match:
      files:
        - 'buildSrc/'
        - 'jenkins'
        - 'migration-service/'
        - 'partners-adapter/'
        - 'partners-api/'
        - 'partners-openapi/'
        - 'partners-replication/'
        - 'partners-rest/'
        - 'partners-scheduler/'
        - 'partners-service/'
        - 'runner/'
        - 'buildSrc/'
        - 'docs/'
        - 'build.gradle.kts'
        - 'gradle.properties'
        - 'settings.gradle.kts'
      regex:
        - '.*\.kts'
        - '.*\.properties'
    cpu: 1
    memory: '2g'
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      clean build -x test
  test:
    postgres: false
    match:
      files:
        - 'buildSrc/'
        - 'jenkins'
        - 'partners-adapter/'
        - 'partners-openapi/'
        - 'partners-service/'
        - 'buildSrc/'
        - 'docs/'
        - 'build.gradle.kts'
        - 'gradle.properties'
        - 'settings.gradle.kts'
        - 'jenkins/settings.yml'
        - 'jenkins/test.groovy'
      regex:
        - '.*\.kts'
        - '.*\.properties'
    cpu: 2
    memory: '8g'
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      -Dsonar.login=${env.SONAR_TOKEN}
      -Dsonar.projectVersion=${pullRequest.fromRef.displayId}
      -Dsonar.pullrequest.key=${params.pullRequestId}
      -Dsonar.pullrequest.branch=${pullRequest.fromRef.displayId}
      -Dsonar.pullrequest.base=${pullRequest.toRef.displayId}
      -Dtest-layer=unit,api,configuration,cdcProvider
      -Dpactbroker.url=${env.PACT_BROKER_URL}
      -Dallure.jobrunId=${launch.jobRunId}
      -Dbuild.link=${env.BUILD_URL}
      -Dbuild.type=prCheck
      qaReporterUpload sonarCoverage --info

release:
  version_pattern: '\d{2}\.\d{3}\.\d{2}_\d{4}'
  version_init: 02.008.00_0000
  repository: maven-distr-dev
  artifact_id: CI02792425
  group_id: CI00908578
  docker_dev: docker-dev.registry-ci.delta.sbrf.ru
  docker_prom: docker-release.registry-ci.delta.sbrf.ru
  image_name: 'CI00908578/CI02792425/partners'
  doc_path: 'docs/build/docs/'
  skip_istio: false
  jira_project: DCBBRAIN
  params_folder: partners
  qgm:
    repository: maven-distr
  default_values:
    parallel_build: true
    params_branch: master
    params_folder: develop
    istio_tag: '2.5'
    commit_or_tag: '02.008.01_0000_i-2.5'
    release_key: DCBBRAIN-4503
    reverse_and_publish: false
    type: release
  jobs:
    test_release:
      wait: false
    vector_release:
      wait: false
  build_gradle:
    cpu: 2
    mem: '8g'
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      -Pversion=${env.VERSION}
      -Dbuild.link=${env.BUILD_URL}
      -Dbuild.type=release
      build -x test generateVectorTest --parallel --info
  run_backend_tests: 'true'
  run_frontend_tests: 'false'
  test:
    allure_dir: build/allure-results
    email_list: DCB_BRAIN_NEW@sberbank.ru
    backend:
      command: >-
        ./gradlew
        -PtokenName=${env.TOKEN_NAME}
        -PtokenPassword=${env.TOKEN_PASSWORD}
        -Dgradle.wrapperUser=${env.TOKEN_NAME}
        -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
        -PsonarToken=${env.SONAR_TOKEN}
        -Pversion=${env.VERSION}
        build qaReporterUpload sonarCoverage
        -Dtest-layer=unit,api,configuration,cdcProvider
        -Dsonar.branch.name=${params.branch}
        -Dpactbroker.url=${env.PACT_BROKER_URL}
        -Dpactbroker.auth.username=${env.PACT_USER}
        -Dpactbroker.auth.password='${env.PACT_PASSWORD}'
        -Dpact.pacticipant.version=${env.VERSION}
        -Dpact.pacticipant.tag=${params.branch}
        -Dpact.consumer.tag=${params.branch}
        -Dpactbroker.consumerversionselectors.tags=${settings.project_name}:${params.branch}
        -Dversion=${env.VERSION}
        -Dbuild.link=${env.BUILD_URL}
        -Dbuild.type=release
        -Dallure.jobrunId=${launch.jobRunId}
  notification:
    message_template: Релиз партнеров закончил сборку со статусом ${result}
    statuses:
      - SUCCESS
      - FAILURE
      - UNSTABLE
    sberchat_peer:
      - 158d264caec011ed
