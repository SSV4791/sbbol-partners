---
kind: ConfigMap
apiVersion: v1
metadata:
  name: cm-app-properties
data:
  application.properties: |-
    server.port=8080
    server.shutdown=graceful
    server.servlet.encoding.charset=UTF-8
    server.servlet.encoding.force=true
    server.servlet.encoding.enabled=true
    server.tomcat.uri-encoding=UTF-8

    spring.jpa.properties.hibernate.jdbc.time_zone=UTC
    spring.jpa.properties.hibernate.cache.use_second_level_cache=true
    spring.jpa.properties.hibernate.cache.use_query_cache=true
    spring.jpa.properties.hibernate.cache.region.factory_class=jcache

    spring.main.banner-mode=off
    spring.application.name={{ os_project.name }}
    spring.liquibase.enabled=false
    spring.profiles.active=default

    management.metrics.tags.application={{ os_project.name }}
    management.metrics.export.prometheus.enabled=true

    management.endpoints.enabled-by-default=true
    management.endpoints.web.exposure.include=health,prometheus
    management.endpoints.jmx.exposure.include=*
    management.endpoint.metrics.enabled=true
    management.endpoint.prometheus.enabled=true
    management.endpoint.health.show-details=always
    management.endpoint.health.cache.time-to-live=60000

    management.endpoint.health.enabled=true
    management.endpoint.health.group.readiness.show-details=always
    management.endpoint.health.group.liveness.include=ping
    management.endpoint.health.group.liveness.show-details=always
    management.health.db.enabled=false

    # Sbbol connect
    sbbol.url.root={{ int_entry.sbbol.rest_in.host }}
    sbbol.url.synapse.system.session=/ss-rest/api

    # StandIn plugin
    standin.plugin.configuration.journalHashKeyResolver=INTERFACE
    standin.plugin.configuration.replicationStrategy=STANDIN_LOCKS
    standin.plugin.configuration.serializerType=BINARY_KRYO

    # Application Journal
    appjournal.moduleId=pprb4-digital-partners

    standin.cloud.client.mmtCallTimeout=30
    standin.cloud.client.heartBeatPeriod=1000
    standin.cloud.client.concurrency=10
    standin.cloud.client.groupId=group_1
    standin.cloud.client.kafka.producerConfig."[security.protocol]"=SSL
    standin.cloud.client.kafka.producerConfig."[ssl.keystore.location]"=/opt/keystore/kafka/server.keystore.jks
    standin.cloud.client.kafka.producerConfig."[ssl.truststore.location]"=/opt/keystore/kafka/trust.jks
    standin.cloud.client.kafka.producerConfig."[ssl.keystore.type]"=JKS
    standin.cloud.client.kafka.producerConfig."[ssl.truststore.type]"=JKS
    standin.cloud.client.kafka.producerConfig."[ssl.protocol]"=TLS
    standin.cloud.client.kafka.producerConfig."[ssl.enabled.protocols]"=TLSv1.2
    standin.cloud.client.kafka.producerConfig."[ssl.endpoint.identification.algorithm]"=
    standin.cloud.client.kafka.consumerConfig."[security.protocol]"=SSL
    standin.cloud.client.kafka.consumerConfig."[ssl.keystore.location]"=/opt/keystore/kafka/server.keystore.jks
    standin.cloud.client.kafka.consumerConfig."[ssl.truststore.location]"=/opt/keystore/kafka/trust.jks
    standin.cloud.client.kafka.consumerConfig."[ssl.keystore.type]"=JKS
    standin.cloud.client.kafka.consumerConfig."[ssl.truststore.type]"=JKS
    standin.cloud.client.kafka.consumerConfig."[ssl.protocol]"=TLS
    standin.cloud.client.kafka.consumerConfig."[ssl.enabled.protocols]"=TLSv1.2
    standin.cloud.client.kafka.consumerConfig."[ssl.endpoint.identification.algorithm]"=
  jvm-arguments: |-
