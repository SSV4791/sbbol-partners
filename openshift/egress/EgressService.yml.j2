---
apiVersion: v1
kind: Service
metadata:
  name: istio-egressgateway-{{ openshift.env }}-{{ os_project.name }}
  labels:
    app: istio-egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_app_label }}
    chart: gateways
    heritage: Tiller
    istio: egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_istio_label }}
    release: istio
spec:
  ports:
{% if os_project.istio.egress.http.port is defined %}
    # Порт для траффика по HTTP
  - name: http-{{ os_project.istio.egress.http.port }}
    port: {{ os_project.istio.egress.http.port }}
    protocol: TCP
    targetPort: {{ os_project.istio.egress.http.port }}
{% endif %}
{% if os_project.istio.egress.mtls.port is defined %}
    # Порт для траффика по HTTPS (mtls)
  - name: https-{{ os_project.istio.egress.mtls.port }}
    port: {{ os_project.istio.egress.mtls.port }}
    protocol: TCP
    targetPort: {{ os_project.istio.egress.mtls.port }}
{% endif %}
{% if os_project.istio.egress.ott is defined %}
    # Порт для траффика по HTTPS (mtls + ott)
  - name: https-{{ os_project.istio.egress.ott.port }}
    port: {{ os_project.istio.egress.ott.port }}
    protocol: TCP
    targetPort: {{ os_project.istio.egress.ott.port }}
{% endif %}

##TCP connections (mq/kafka/db/etc)
{% for eg_port in ( integration_entries | flatten | selectattr('protocol', 'equalto', 'TCP')
        | selectattr('egress_port', 'defined') | map(attribute='egress_port') | list | unique ) %}
  - name: tcp-{{ eg_port }}
    port: {{ eg_port }}
    protocol: TCP
    targetPort: {{ eg_port }}
{% endfor %}

  selector:
    app: istio-egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_app_label }}
    istio: egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_istio_label }}
    release: istio
  sessionAffinity: None
  type: ClusterIP
