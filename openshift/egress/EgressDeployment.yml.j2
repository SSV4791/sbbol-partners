---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: egressgateway-{{ openshift.env }}-{{ os_project.name }}
  labels:
    app: istio-egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_app_label }}
    app.kubernetes.io/component: gateways
    app.kubernetes.io/instance: {{ openshift.io_control_panel }}
    app.kubernetes.io/managed-by: maistra-istio-operator
    app.kubernetes.io/name: gateways
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 2.0.2-3.el8-76
    chart: gateways
    heritage: Tiller
    istio: egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_istio_label }}
    maistra.io/owner: {{ openshift.io_control_panel }}
    maistra-version: 2.0.2
    release: istio
spec:
  progressDeadlineSeconds: 600
  replicas: {{ os_project.istio.egress.pods | default('1')  }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: istio-egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_app_label }}
      istio: egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_istio_label }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: 'false'
      labels:
        app: istio-egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_app_label }}
        chart: gateways
        heritage: Tiller
        istio: egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_istio_label }}
        maistra-control-plane: {{ openshift.io_control_panel }}
        release: istio
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
{% if os_project.istio.egress.ott is defined %}
        - name: ott-sidecar
# version 4.0.4
          image: {{ registry_ott | default('registry.ca.sbrf.ru/sigma/pprb/ci00641491/ci01125613_ott') }}/ott-client-api-v2@sha256:05b3d2530abdb9e27b6862793a939c87c3a72d09dde6656c4f192f6d408d7088
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: {{ os_project.istio.egress.ott_sidecar.resources.limits.cpu | default('400m') }}
              memory: {{ os_project.istio.egress.ott_sidecar.resources.limits.memory | default('500Mi') }}
              ephemeral-storage: {{ os_project.istio.egress.ott_sidecar.resources.limits.ephemeral_storage | default('512Mi') }}
            requests:
              cpu: {{ os_project.istio.egress.ott_sidecar.resources.requests.cpu | default('300m') }}
              memory: {{ os_project.istio.egress.ott_sidecar.resources.requests.memory | default('300Mi') }}
              ephemeral-storage: {{ os_project.istio.egress.ott_sidecar.resources.requests.ephemeral_storage | default('256Mi') }}
          terminationMessagePolicy: File
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /mnt/secrets
              name: ott-secrets-for-mmt
              readOnly: true
            - mountPath: /mnt/ott-uds-socket
              name: ott-uds-socket
            - mountPath: /tmp/ott-logback.xml
              name: ott-logback
              readOnly: true
            - name: empty-dir
              mountPath: /tmp
          envFrom:
            - secretRef:
                name: ott-passwords
            - configMapRef:
                name: cm-egress-ott-settings
{% endif %}
        - name: istio-proxy
# Version 2.0.2-3
          image: {{ registry_istio_proxy | default('registry.ca.sbrf.ru/sigma/registry_redhat_io/openshift-service-mesh') }}/proxyv2-rhel8@sha256:51d82b560e467ec59a3b6625b04c31b86df5b4c10070a351d547cb6cf3f26591
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
          args:
            - proxy
            - router
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --proxyLogLevel=warning
            - --proxyComponentLogLevel=misc:error
            - --log_output_level=default:info
          resources:
            limits:
              cpu: {{ os_project.istio.egress.proxy.resources.limits.cpu | default('600m') }}
              memory: {{ os_project.istio.egress.proxy.resources.limits.memory | default('900Mi') }}
              ephemeral-storage: {{ os_project.istio.egress.proxy.resources.limits.ephemeral_storage | default('64Mi') }}
            requests:
              cpu: {{ os_project.istio.egress.proxy.resources.requests.cpu | default('400m') }}
              memory: {{ os_project.istio.egress.proxy.resources.requests.memory | default('700Mi') }}
              ephemeral-storage: {{ os_project.istio.egress.proxy.resources.requests.ephemeral_storage | default('32Mi') }}
          ports:
{# почти все порты выпилены, тк сейчас используем неименованные порты #}
            - name: tls
              containerPort: 15443
              protocol: TCP
            - name: http-envoy-prom
              containerPort: 15090
              protocol: TCP
          env:
            - name: JWT_POLICY
              value: first-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: CA_ADDR
              value: {{ openshift.mesh_discovery_address }}:15012
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: CANONICAL_SERVICE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['service.istio.io/canonical-name']
            - name: CANONICAL_REVISION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['service.istio.io/canonical-revision']
            - name: ISTIO_META_WORKLOAD_NAME
              value: egressgateway-{{ openshift.env }}-{{ os_project.name }}
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/apps/v1/namespaces/{{ os_project.project }}/deployments/egressgateway-{{ openshift.env }}-{{ os_project.name }}
            - name: ISTIO_META_MESH_ID
              value: cluster.local
            - name: ISTIO_META_ROUTER_MODE
              value: sni-dnat
            - name: ISTIO_META_CLUSTER_ID
              value: Kubernetes
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            failureThreshold: 30
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePolicy: File
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /etc/istio/config
              name: config-volume
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - mountPath: /etc/istio/pod
              name: podinfo
            - mountPath: /etc/istio/egressgateway-ca-certs
              name: egressgateway-ca-certs
              readOnly: true
            - mountPath: /etc/istio/egressgateway-certs
              name: egressgateway-certs
              readOnly: true
{% if os_project.istio.egress.mtls.cert_megacucs is defined %}
# Сертификат для интеграции с Мегасукс. Нужен для БПС Подтверждение пописи
            - name: egressgateway-certs-megacucs
              readOnly: true
              mountPath: /etc/istio/egressgateway-certs-megacucs
{% endif %}
{% if os_project.istio.egress.ott is defined %}
            - mountPath: /mnt/ott-uds-socket
              name: ott-uds-socket
{% endif %}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      schedulerName: default-scheduler
      volumes:
        - name: istio-envoy
          emptyDir: {}
        - name: empty-dir
          emptyDir: {}
        - name: istiod-ca-cert
          configMap:
            defaultMode: 420
            name: istio-ca-root-cert
        - name: config-volume
          configMap:
            defaultMode: 420
            name: istio-egress-basic
            optional: true
        - name: podinfo
          downwardAPI:
            defaultMode: 420
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations
              path: annotations
        - name: egressgateway-certs
          secret:
            secretName: istio-egressgateway-certs
            defaultMode: 400
            optional: true
        - name: egressgateway-ca-certs
          secret:
            secretName: istio-egressgateway-ca-certs
            defaultMode: 400
            optional: true
{% if os_project.istio.egress.mtls.cert_megacucs is defined %}
# Сертификат для интеграции с Мегасукс. Нужен для БПС Подтверждение пописи
        - name: egressgateway-certs-megacucs
          secret:
            secretName: istio-egressgateway-certs-megacucs
            defaultMode: 400
            optional: true
{% endif %}
{% if os_project.istio.egress.ott is defined %}
        - name: ott-uds-socket
          emptyDir:
            medium: Memory
# Начало. OTT-sidecar удалить если ОТТ на egress не нужен
        - name: ott-secrets-for-mmt
          secret:
            secretName: ott-secrets-for-mmt
            defaultMode: 400
        - name: ott-logback
          configMap:
            name: cm-egress-ott-logback
            defaultMode: 400
{% endif %}
