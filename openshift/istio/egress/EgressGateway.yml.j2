---
{# TODO: do we need ip in gateways? #}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gw-egress-{{ openshift.env }}-{{ os_project.name }}
  labels:
    app: {{ openshift.env }}-{{ os_project.name }}-{{ suffix_app_label }}
spec:
  selector:
    istio: egressgateway-{{ openshift.env }}-{{ os_project.name }}-{{ suffix_istio_label }}
  servers:
{% if (integration_entries | flatten | rejectattr('protocol', 'equalto', 'TCP') | rejectattr('ott') | rejectattr('mtls') | map(attribute='host') | list ) != [] %}
# Хосты с подключением по HTTP
  - hosts:
{% for host in (integration_entries | flatten | rejectattr('protocol', 'equalto', 'TCP') | rejectattr('ott') | rejectattr('mtls') | map(attribute='host') | list | unique) %}
    - {{ host }}
{% endfor %}
{# TODO: not sure about ip #}
{% for ip in (integration_entries | flatten | rejectattr('protocol', 'equalto', 'TCP') | rejectattr('ott') | rejectattr('mtls') | selectattr('ip', 'defined') | map(attribute='ip') | list | unique) %}
    - {{ ip }}
{% endfor %}
    port:
      name: https-{{ os_project.istio.egress.http.port }}
      number: {{ os_project.istio.egress.http.port }}
{% if (os_project.istio.istio_mtls is defined) and (os_project.istio.istio_mtls == 'DISABLE') %}
      protocol: HTTP
{% else %}
      protocol: HTTPS
    tls:
      caCertificates: /etc/certs/root-cert.pem
      mode: MUTUAL
      privateKey: /etc/certs/key.pem
      serverCertificate: /etc/certs/cert-chain.pem
{% endif %}
{% endif %}

{% if (integration_entries | flatten | rejectattr('protocol', 'equalto', 'TCP') | rejectattr('ott') | selectattr('mtls') | map(attribute='host') | list ) != [] %}
# Хосты с подключением по HTTPS (mtls)
  - hosts:
{% for host in (integration_entries | flatten | rejectattr('protocol', 'equalto', 'TCP') | rejectattr('ott') | selectattr('mtls') | map(attribute='host') | list | unique) %}
    - {{ host }}
{% endfor %}
{% for ip in (integration_entries | flatten| rejectattr('protocol', 'equalto', 'TCP') | rejectattr('ott') | selectattr('mtls') | selectattr('ip', 'defined') | map(attribute='ip') | list | unique) %}
    - {{ ip }}
{% endfor %}
    port:
      name: https-{{ os_project.istio.egress.mtls.port }}
      number: {{ os_project.istio.egress.mtls.port }}
{% if (os_project.istio.istio_mtls is defined) and (os_project.istio.istio_mtls == 'DISABLE') %}
      protocol: HTTP
{% else %}
      protocol: HTTPS
    tls:
      caCertificates: /etc/certs/root-cert.pem
      mode: MUTUAL
      privateKey: /etc/certs/key.pem
      serverCertificate: /etc/certs/cert-chain.pem
{% endif %}
{% endif %}

{# TODO: fix fail if ott is undefined  in non-tcp connections #}
{% if (integration_entries | flatten | rejectattr('protocol', 'equalto', 'TCP') | selectattr('ott') | map(attribute='host') | list ) != [] %}
# Хосты с подключением по HTTPS (mtls + ott). Считаем, что ott без mtls не будет
  - hosts:
{% for host in (integration_entries | flatten | rejectattr('protocol', 'equalto', 'TCP') | selectattr('ott') | map(attribute='host') | list | unique) %}
    - {{ host }}
{% endfor %}

{% for ip in (integration_entries | flatten | rejectattr('protocol', 'equalto', 'TCP') | selectattr('ott') | selectattr('ip', 'defined') | map(attribute='ip') | list | unique) %}
    - {{ ip }}
{% endfor %}
    port:
      name: https-{{ os_project.istio.egress.ott.port }}
      number: {{ os_project.istio.egress.ott.port }}
{% if (os_project.istio.istio_mtls is defined) and (os_project.istio.istio_mtls == 'DISABLE') %}
      protocol: HTTP
{% else %}
      protocol: HTTPS
    tls:
      caCertificates: /etc/certs/root-cert.pem
      mode: MUTUAL
      privateKey: /etc/certs/key.pem
      serverCertificate: /etc/certs/cert-chain.pem
{% endif %}
{% endif %}


##TCP connections
{# TODO: IPs dont need here? #}
{% for integration_entry in integration_entries | flatten | selectattr('protocol', 'equalto', 'TCP') | selectattr('egress_port') %}
  - hosts:
{% if integration_entry.host is defined %}
    - {{ integration_entry.host }}
{% endif %}
{% if integration_entry.ip is defined %}
    - {{ integration_entry.ip }}
{% endif %}
    port:
      name: tcp-{{ integration_entry.egress_port }}
      number: {{ integration_entry.egress_port }}
      protocol: TCP
{% endfor %}
